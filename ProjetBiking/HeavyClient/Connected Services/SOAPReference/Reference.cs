//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HeavyClient.SOAPReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OpenRouteServiceItinary", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class OpenRouteServiceItinary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeavyClient.SOAPReference.FeatureI[] featuresField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeavyClient.SOAPReference.FeatureI[] features {
            get {
                return this.featuresField;
            }
            set {
                if ((object.ReferenceEquals(this.featuresField, value) != true)) {
                    this.featuresField = value;
                    this.RaisePropertyChanged("features");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FeatureI", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class FeatureI : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeavyClient.SOAPReference.GeometryI geometryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeavyClient.SOAPReference.PropertyI propertiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeavyClient.SOAPReference.GeometryI geometry {
            get {
                return this.geometryField;
            }
            set {
                if ((object.ReferenceEquals(this.geometryField, value) != true)) {
                    this.geometryField = value;
                    this.RaisePropertyChanged("geometry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeavyClient.SOAPReference.PropertyI properties {
            get {
                return this.propertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.propertiesField, value) != true)) {
                    this.propertiesField = value;
                    this.RaisePropertyChanged("properties");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeometryI", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class GeometryI : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float[][] coordinatesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float[][] coordinates {
            get {
                return this.coordinatesField;
            }
            set {
                if ((object.ReferenceEquals(this.coordinatesField, value) != true)) {
                    this.coordinatesField = value;
                    this.RaisePropertyChanged("coordinates");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertyI", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class PropertyI : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeavyClient.SOAPReference.Segment[] segmentsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeavyClient.SOAPReference.Segment[] segments {
            get {
                return this.segmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.segmentsField, value) != true)) {
                    this.segmentsField = value;
                    this.RaisePropertyChanged("segments");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Segment", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class Segment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double distanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double durationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double distance {
            get {
                return this.distanceField;
            }
            set {
                if ((this.distanceField.Equals(value) != true)) {
                    this.distanceField = value;
                    this.RaisePropertyChanged("distance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double duration {
            get {
                return this.durationField;
            }
            set {
                if ((this.durationField.Equals(value) != true)) {
                    this.durationField = value;
                    this.RaisePropertyChanged("duration");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OpenRouteServiceItem", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class OpenRouteServiceItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeavyClient.SOAPReference.Feature[] featuresField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeavyClient.SOAPReference.Feature[] features {
            get {
                return this.featuresField;
            }
            set {
                if ((object.ReferenceEquals(this.featuresField, value) != true)) {
                    this.featuresField = value;
                    this.RaisePropertyChanged("features");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Feature", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class Feature : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeavyClient.SOAPReference.Geometry geometryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private HeavyClient.SOAPReference.Property propertiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeavyClient.SOAPReference.Geometry geometry {
            get {
                return this.geometryField;
            }
            set {
                if ((object.ReferenceEquals(this.geometryField, value) != true)) {
                    this.geometryField = value;
                    this.RaisePropertyChanged("geometry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HeavyClient.SOAPReference.Property properties {
            get {
                return this.propertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.propertiesField, value) != true)) {
                    this.propertiesField = value;
                    this.RaisePropertyChanged("properties");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Geometry", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class Geometry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float[] coordinatesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float[] coordinates {
            get {
                return this.coordinatesField;
            }
            set {
                if ((object.ReferenceEquals(this.coordinatesField, value) != true)) {
                    this.coordinatesField = value;
                    this.RaisePropertyChanged("coordinates");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Property", Namespace="http://schemas.datacontract.org/2004/07/Server")]
    [System.SerializableAttribute()]
    public partial class Property : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string countryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string countyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string country {
            get {
                return this.countryField;
            }
            set {
                if ((object.ReferenceEquals(this.countryField, value) != true)) {
                    this.countryField = value;
                    this.RaisePropertyChanged("country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string county {
            get {
                return this.countyField;
            }
            set {
                if ((object.ReferenceEquals(this.countyField, value) != true)) {
                    this.countyField = value;
                    this.RaisePropertyChanged("county");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SOAPReference.IServiceSOAP")]
    public interface IServiceSOAP {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSOAP/GetItinarySOAP", ReplyAction="http://tempuri.org/IServiceSOAP/GetItinarySOAPResponse")]
        HeavyClient.SOAPReference.OpenRouteServiceItinary GetItinarySOAP(string startAddress, string endAddress, string type, string ville);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSOAP/GetItinarySOAP", ReplyAction="http://tempuri.org/IServiceSOAP/GetItinarySOAPResponse")]
        System.Threading.Tasks.Task<HeavyClient.SOAPReference.OpenRouteServiceItinary> GetItinarySOAPAsync(string startAddress, string endAddress, string type, string ville);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSOAP/getCoordinatesFromAddress", ReplyAction="http://tempuri.org/IServiceSOAP/getCoordinatesFromAddressResponse")]
        HeavyClient.SOAPReference.OpenRouteServiceItem getCoordinatesFromAddress(string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSOAP/getCoordinatesFromAddress", ReplyAction="http://tempuri.org/IServiceSOAP/getCoordinatesFromAddressResponse")]
        System.Threading.Tasks.Task<HeavyClient.SOAPReference.OpenRouteServiceItem> getCoordinatesFromAddressAsync(string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSOAP/Sub", ReplyAction="http://tempuri.org/IServiceSOAP/SubResponse")]
        int Sub(int Number1, int Number2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSOAP/Sub", ReplyAction="http://tempuri.org/IServiceSOAP/SubResponse")]
        System.Threading.Tasks.Task<int> SubAsync(int Number1, int Number2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSOAP/Mul", ReplyAction="http://tempuri.org/IServiceSOAP/MulResponse")]
        int Mul(int Number1, int Number2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSOAP/Mul", ReplyAction="http://tempuri.org/IServiceSOAP/MulResponse")]
        System.Threading.Tasks.Task<int> MulAsync(int Number1, int Number2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSOAP/Div", ReplyAction="http://tempuri.org/IServiceSOAP/DivResponse")]
        int Div(int Number1, int Number2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceSOAP/Div", ReplyAction="http://tempuri.org/IServiceSOAP/DivResponse")]
        System.Threading.Tasks.Task<int> DivAsync(int Number1, int Number2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceSOAPChannel : HeavyClient.SOAPReference.IServiceSOAP, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSOAPClient : System.ServiceModel.ClientBase<HeavyClient.SOAPReference.IServiceSOAP>, HeavyClient.SOAPReference.IServiceSOAP {
        
        public ServiceSOAPClient() {
        }
        
        public ServiceSOAPClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSOAPClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSOAPClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSOAPClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HeavyClient.SOAPReference.OpenRouteServiceItinary GetItinarySOAP(string startAddress, string endAddress, string type, string ville) {
            return base.Channel.GetItinarySOAP(startAddress, endAddress, type, ville);
        }
        
        public System.Threading.Tasks.Task<HeavyClient.SOAPReference.OpenRouteServiceItinary> GetItinarySOAPAsync(string startAddress, string endAddress, string type, string ville) {
            return base.Channel.GetItinarySOAPAsync(startAddress, endAddress, type, ville);
        }
        
        public HeavyClient.SOAPReference.OpenRouteServiceItem getCoordinatesFromAddress(string address) {
            return base.Channel.getCoordinatesFromAddress(address);
        }
        
        public System.Threading.Tasks.Task<HeavyClient.SOAPReference.OpenRouteServiceItem> getCoordinatesFromAddressAsync(string address) {
            return base.Channel.getCoordinatesFromAddressAsync(address);
        }
        
        public int Sub(int Number1, int Number2) {
            return base.Channel.Sub(Number1, Number2);
        }
        
        public System.Threading.Tasks.Task<int> SubAsync(int Number1, int Number2) {
            return base.Channel.SubAsync(Number1, Number2);
        }
        
        public int Mul(int Number1, int Number2) {
            return base.Channel.Mul(Number1, Number2);
        }
        
        public System.Threading.Tasks.Task<int> MulAsync(int Number1, int Number2) {
            return base.Channel.MulAsync(Number1, Number2);
        }
        
        public int Div(int Number1, int Number2) {
            return base.Channel.Div(Number1, Number2);
        }
        
        public System.Threading.Tasks.Task<int> DivAsync(int Number1, int Number2) {
            return base.Channel.DivAsync(Number1, Number2);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SOAPReference.IServiceREST")]
    public interface IServiceREST {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/GetItinaryREST", ReplyAction="http://tempuri.org/IServiceREST/GetItinaryRESTResponse")]
        HeavyClient.SOAPReference.OpenRouteServiceItinary GetItinaryREST(string startAddress, string endAddress, string type, string ville);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/GetItinaryREST", ReplyAction="http://tempuri.org/IServiceREST/GetItinaryRESTResponse")]
        System.Threading.Tasks.Task<HeavyClient.SOAPReference.OpenRouteServiceItinary> GetItinaryRESTAsync(string startAddress, string endAddress, string type, string ville);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/SubRest", ReplyAction="http://tempuri.org/IServiceREST/SubRestResponse")]
        int SubRest(string Number1, string Number2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/SubRest", ReplyAction="http://tempuri.org/IServiceREST/SubRestResponse")]
        System.Threading.Tasks.Task<int> SubRestAsync(string Number1, string Number2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/MulRest", ReplyAction="http://tempuri.org/IServiceREST/MulRestResponse")]
        int MulRest(string Number1, string Number2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/MulRest", ReplyAction="http://tempuri.org/IServiceREST/MulRestResponse")]
        System.Threading.Tasks.Task<int> MulRestAsync(string Number1, string Number2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/DivRest", ReplyAction="http://tempuri.org/IServiceREST/DivRestResponse")]
        int DivRest(string Number1, string Number2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceREST/DivRest", ReplyAction="http://tempuri.org/IServiceREST/DivRestResponse")]
        System.Threading.Tasks.Task<int> DivRestAsync(string Number1, string Number2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceRESTChannel : HeavyClient.SOAPReference.IServiceREST, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceRESTClient : System.ServiceModel.ClientBase<HeavyClient.SOAPReference.IServiceREST>, HeavyClient.SOAPReference.IServiceREST {
        
        public ServiceRESTClient() {
        }
        
        public ServiceRESTClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceRESTClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceRESTClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceRESTClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HeavyClient.SOAPReference.OpenRouteServiceItinary GetItinaryREST(string startAddress, string endAddress, string type, string ville) {
            return base.Channel.GetItinaryREST(startAddress, endAddress, type, ville);
        }
        
        public System.Threading.Tasks.Task<HeavyClient.SOAPReference.OpenRouteServiceItinary> GetItinaryRESTAsync(string startAddress, string endAddress, string type, string ville) {
            return base.Channel.GetItinaryRESTAsync(startAddress, endAddress, type, ville);
        }
        
        public int SubRest(string Number1, string Number2) {
            return base.Channel.SubRest(Number1, Number2);
        }
        
        public System.Threading.Tasks.Task<int> SubRestAsync(string Number1, string Number2) {
            return base.Channel.SubRestAsync(Number1, Number2);
        }
        
        public int MulRest(string Number1, string Number2) {
            return base.Channel.MulRest(Number1, Number2);
        }
        
        public System.Threading.Tasks.Task<int> MulRestAsync(string Number1, string Number2) {
            return base.Channel.MulRestAsync(Number1, Number2);
        }
        
        public int DivRest(string Number1, string Number2) {
            return base.Channel.DivRest(Number1, Number2);
        }
        
        public System.Threading.Tasks.Task<int> DivRestAsync(string Number1, string Number2) {
            return base.Channel.DivRestAsync(Number1, Number2);
        }
    }
}
